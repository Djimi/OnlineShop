plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.3'
    id 'io.spring.dependency-management' version '1.1.4'
}

group = 'manev.damyan.inventory'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '21'
}

repositories {
    mavenCentral()
}

//dependencyManagement {
//    imports {
//        mavenBom("io.opentelemetry.instrumentation:opentelemetry-instrumentation-bom:2.6.0")
//    }
//}

dependencies {
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    testImplementation 'org.junit.jupiter:junit-jupiter:5.8.1'
    implementation 'org.postgresql:postgresql'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    implementation('org.springframework.boot:spring-boot-starter-validation')
    implementation('org.springframework.boot:spring-boot-starter-hateoas')
    implementation 'org.springframework.boot:spring-boot-starter-aop'

    implementation 'org.mapstruct:mapstruct:1.5.5.Final'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'
    implementation 'org.projectlombok:lombok-mapstruct-binding:0.2.0'

    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.6.0'

    implementation 'org.springframework.boot:spring-boot-starter-actuator'
//    implementation 'io.micrometer:micrometer-tracing'
//    implementation 'io.micrometer:micrometer-tracing-bridge-otel'
//    implementation 'io.opentelemetry:opentelemetry-exporter-otlp'


    implementation 'io.micrometer:micrometer-registry-prometheus'
    implementation 'io.micrometer:micrometer-tracing-bridge-brave'
    implementation 'io.zipkin.reporter2:zipkin-reporter-brave'
//    implementation("io.opentelemetry.instrumentation:opentelemetry-spring-boot-starter")

//    implementation("io.micrometer:micrometer-tracing-bridge-otel")
//    implementation("io.micrometer:micrometer-registry-otlp")
//    implementation("io.opentelemetry:opentelemetry-exporter-otlp")

    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'

    implementation 'org.springframework.kafka:spring-kafka'
}

tasks.named("jar") {
    enabled = false
}

tasks.named("bootJar") {
    archiveFileName = "inventory.jar"
}


tasks.named('test') {
    useJUnitPlatform()
}

task deleteLogs(type: Delete) {
    File srcDir = project.layout.projectDirectory.dir("logs").asFile
    println(srcDir.toString())
    delete srcDir
}

